#include<ctype.h>
#include<conio.h>
#include<stdio.h>
#define SIZE 50
char stack[SIZE];
int top=-1;
push(char elem)
{
if(top==SIZE-1)
{
printf("Stack is full!");
return 0;
}
top++;
return stack[top]=elem;
}
char pop()
{
if(top==-1)
return -1;
return stack[top--];
}
int pr(char symbol)
{
if(symbol=='^')
{
return(3);
}
else if(symbol=='*'|| symbol=='/')
{
return(2);
}
else if(symbol=='+' | symbol=='-')
{
return(1);
}
else {
return(0);
}
}
void main()
{
char infix[50],postfix[50],ch,item;
int i=0,k=0;
clrscr();
printf("Enter infix expression:");
scanf("%s",infix);
push('#');
while((ch=infix[i++])!='\0')
{
if(ch=='(')
push(ch);
else if(isalnum(ch))
postfix[k++]=ch;
else if(ch==')')
{
while (stack[top]!='(')
postfix[k++]=pop();
}
else
{
while(pr(stack[top])>=pr(ch))
postfix[k++]=pop();
push(ch);
}
}
while(stack[top]!='#')
postfix[k++]=pop();
postfix[k]='\0';
printf("\n Postfix Expression=%s\n",postfix);
getch();
}
